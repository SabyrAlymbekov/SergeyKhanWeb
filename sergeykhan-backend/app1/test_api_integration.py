#!/usr/bin/env python
"""
–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–∞—á–∏ –∑–∞–∫–∞–∑–æ–≤.
"""

import requests
import json
from decimal import Decimal

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API
API_BASE_URL = "http://127.0.0.1:8000/api"

def login_user(email, password):
    """–í—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞"""
    response = requests.post(f"{API_BASE_URL}/login/", data={
        'email': email,
        'password': password
    })
    if response.status_code == 200:
        return response.json()['token']
    else:
        print(f"–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è {email}: {response.status_code}")
        print(response.text)
        return None

def create_test_order(token, description, assigned_master_id=None):
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑"""
    headers = {'Authorization': f'Token {token}', 'Content-Type': 'application/json'}
    data = {
        'description': description,
        'estimated_cost': '100.00',
        'final_cost': '150.00',
        'expenses': '50.00',
        'status': '–Ω–æ–≤—ã–π'
    }
    if assigned_master_id:
        data['assigned_master'] = assigned_master_id
        data['status'] = '–≤ —Ä–∞–±–æ—Ç–µ'
    
    response = requests.post(f"{API_BASE_URL}/orders/", headers=headers, data=json.dumps(data))
    if response.status_code == 201:
        return response.json()['id']
    else:
        print(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞: {response.status_code}")
        print(response.text)
        return None

def get_users_by_role(token, role):
    """–ü–æ–ª—É—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Ä–æ–ª–∏"""
    headers = {'Authorization': f'Token {token}'}
    response = requests.get(f"{API_BASE_URL}/users/{role}s/", headers=headers)
    if response.status_code == 200:
        return response.json()
    else:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è {role}s: {response.status_code}")
        return []

def transfer_order_to_warranty_master(token, order_id, warranty_master_id):
    """–ü–µ—Ä–µ–¥–∞–µ—Ç –∑–∞–∫–∞–∑ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω–æ–º—É –º–∞—Å—Ç–µ—Ä—É"""
    headers = {'Authorization': f'Token {token}', 'Content-Type': 'application/json'}
    data = {'warranty_master_id': warranty_master_id}
    
    response = requests.post(f"{API_BASE_URL}/orders/{order_id}/transfer/", 
                           headers=headers, data=json.dumps(data))
    return response

def test_warranty_transfer_scenarios():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –ø–µ—Ä–µ–¥–∞—á–∏ –∑–∞–∫–∞–∑–æ–≤"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ –ø–µ—Ä–µ–¥–∞—á–∏ –∑–∞–∫–∞–∑–æ–≤ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–º –º–∞—Å—Ç–µ—Ä–∞–º")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –æ–Ω–∏ —É–∂–µ —Å–æ–∑–¥–∞–Ω—ã)
    print("\n1. –í—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    # –ü—Ä–æ–±—É–µ–º –≤–æ–π—Ç–∏ –∫–∞–∫ —Ä–∞–∑–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    admin_token = login_user("admin@test.com", "password123")
    master_token = login_user("master@test.com", "password123")
    warranty_token = login_user("warranty@test.com", "password123")
    
    if not all([admin_token, master_token, warranty_token]):
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º")
        return False
    
    print("‚úÖ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    masters = get_users_by_role(admin_token, "master")
    warranty_masters = get_users_by_role(admin_token, "warranty-master")
    
    if not masters or not warranty_masters:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        return False
    
    master_id = masters[0]['id']
    warranty_master_id = next((u['id'] for u in warranty_masters if 'warranty' in u['email']), None)
    
    if not warranty_master_id:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π –º–∞—Å—Ç–µ—Ä")
        return False
    
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω –º–∞—Å—Ç–µ—Ä: {master_id}, –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π –º–∞—Å—Ç–µ—Ä: {warranty_master_id}")
    
    # –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ —Å –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–º –º–∞—Å—Ç–µ—Ä–æ–º –∏ –ø–µ—Ä–µ–¥–∞—á–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    print("\n3. –¢–µ—Å—Ç 1: –ü–µ—Ä–µ–¥–∞—á–∞ –∑–∞–∫–∞–∑–∞ —Å –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–º –º–∞—Å—Ç–µ—Ä–æ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º...")
    order1_id = create_test_order(admin_token, "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å –º–∞—Å—Ç–µ—Ä–æ–º", master_id)
    
    if not order1_id:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑")
        return False
    
    response = transfer_order_to_warranty_master(admin_token, order1_id, warranty_master_id)
    print(f"   –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
    
    if response.status_code == 200:
        result = response.json()
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        print(f"   –®—Ç—Ä–∞—Ñ –ø—Ä–∏–º–µ–Ω–µ–Ω: {result.get('fine_applied', 0)}")
        print(f"   –ë—ã–ª –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –º–∞—Å—Ç–µ—Ä: {result.get('had_assigned_master', False)}")
        print("   ‚úÖ –¢–µ—Å—Ç 1 –ø—Ä–æ–π–¥–µ–Ω")
    else:
        print(f"   ‚ùå –¢–µ—Å—Ç 1 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: {response.text}")
        return False
    
    # –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –±–µ–∑ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞ –∏ –ø–µ—Ä–µ–¥–∞—á–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    print("\n4. –¢–µ—Å—Ç 2: –ü–µ—Ä–µ–¥–∞—á–∞ –∑–∞–∫–∞–∑–∞ –±–µ–∑ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º...")
    order2_id = create_test_order(admin_token, "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –±–µ–∑ –º–∞—Å—Ç–µ—Ä–∞")
    
    if not order2_id:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑")
        return False
    
    response = transfer_order_to_warranty_master(admin_token, order2_id, warranty_master_id)
    print(f"   –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
    
    if response.status_code == 200:
        result = response.json()
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        print(f"   –®—Ç—Ä–∞—Ñ –ø—Ä–∏–º–µ–Ω–µ–Ω: {result.get('fine_applied', 0)}")
        print(f"   –ë—ã–ª –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –º–∞—Å—Ç–µ—Ä: {result.get('had_assigned_master', False)}")
        print("   ‚úÖ –¢–µ—Å—Ç 2 –ø—Ä–æ–π–¥–µ–Ω")
    else:
        print(f"   ‚ùå –¢–µ—Å—Ç 2 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: {response.text}")
        return False
    
    # –¢–µ—Å—Ç 3: –ü–µ—Ä–µ–¥–∞—á–∞ –∑–∞–∫–∞–∑–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–º –º–∞—Å—Ç–µ—Ä–æ–º
    print("\n5. –¢–µ—Å—Ç 3: –ü–µ—Ä–µ–¥–∞—á–∞ –∑–∞–∫–∞–∑–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–º –º–∞—Å—Ç–µ—Ä–æ–º...")
    order3_id = create_test_order(admin_token, "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è –º–∞—Å—Ç–µ—Ä–∞", master_id)
    
    if not order3_id:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑")
        return False
    
    response = transfer_order_to_warranty_master(master_token, order3_id, warranty_master_id)
    print(f"   –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
    
    if response.status_code == 200:
        result = response.json()
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        print(f"   –®—Ç—Ä–∞—Ñ –ø—Ä–∏–º–µ–Ω–µ–Ω: {result.get('fine_applied', 0)}")
        print(f"   –ü–µ—Ä–µ–¥–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: {result.get('transferred_by_role', 'unknown')}")
        print("   ‚úÖ –¢–µ—Å—Ç 3 –ø—Ä–æ–π–¥–µ–Ω")
    else:
        print(f"   ‚ùå –¢–µ—Å—Ç 3 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: {response.text}")
        return False
    
    print("\nüéâ –í—Å–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print("\nüìã –ö—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ:")
    print("‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∑–∞–∫–∞–∑—ã —Å –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–º –º–∞—Å—Ç–µ—Ä–æ–º (—à—Ç—Ä–∞—Ñ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è)")
    print("‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∑–∞–∫–∞–∑—ã –±–µ–∑ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞ (—à—Ç—Ä–∞—Ñ –Ω–µ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è)")
    print("‚úÖ –ù–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –º–∞—Å—Ç–µ—Ä–∞ –º–æ–≥—É—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Å–≤–æ–∏ –∑–∞–∫–∞–∑—ã")
    print("‚úÖ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —à—Ç—Ä–∞—Ñ–∞—Ö")
    
    return True

if __name__ == '__main__':
    test_warranty_transfer_scenarios()
