#!/usr/bin/env python
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–∞—á–∏ –∑–∞–∫–∞–∑–æ–≤.
"""

import os
import sys
import django
import json
from decimal import Decimal

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ Django –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'app1.settings')

django.setup()

from api1.models import Order, Balance, BalanceLog, TransactionLog, OrderLog, CustomUser
from rest_framework.authtoken.models import Token

def create_test_users():
    """–°–æ–∑–¥–∞—ë—Ç —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    print("–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    # –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
    super_admin, created = CustomUser.objects.get_or_create(
        email="super_admin_test@test.com",
        defaults={
            'role': 'super-admin',
            'is_staff': True,
            'is_superuser': True
        }
    )
    if created:
        super_admin.set_password("password123")
        super_admin.save()
        print(f"–°–æ–∑–¥–∞–Ω —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {super_admin.email}")
    
    # –ú–∞—Å—Ç–µ—Ä
    master, created = CustomUser.objects.get_or_create(
        email="master_test@test.com",
        defaults={'role': 'master'}
    )
    if created:
        master.set_password("password123")
        master.save()
        print(f"–°–æ–∑–¥–∞–Ω –º–∞—Å—Ç–µ—Ä: {master.email}")
    
    # –ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π –º–∞—Å—Ç–µ—Ä
    warranty_master, created = CustomUser.objects.get_or_create(
        email="warranty_test@test.com",
        defaults={'role': 'warrant-master'}
    )
    if created:
        warranty_master.set_password("password123")
        warranty_master.save()
        print(f"–°–æ–∑–¥–∞–Ω –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π –º–∞—Å—Ç–µ—Ä: {warranty_master.email}")
    
    return super_admin, master, warranty_master

def create_test_orders(master):
    """–°–æ–∑–¥–∞—ë—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã"""
    print("–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤...")
    
    # –ó–∞–∫–∞–∑ —Å –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–º –º–∞—Å—Ç–µ—Ä–æ–º
    order_with_master = Order.objects.create(
        description="–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å –º–∞—Å—Ç–µ—Ä–æ–º",
        status="–≤ —Ä–∞–±–æ—Ç–µ",
        assigned_master=master,
        estimated_cost=Decimal('100.00'),
        final_cost=Decimal('150.00'),
        expenses=Decimal('50.00')
    )
    print(f"–°–æ–∑–¥–∞–Ω –∑–∞–∫–∞–∑ —Å –º–∞—Å—Ç–µ—Ä–æ–º: #{order_with_master.id}")
    
    # –ó–∞–∫–∞–∑ –±–µ–∑ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞
    order_without_master = Order.objects.create(
        description="–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –±–µ–∑ –º–∞—Å—Ç–µ—Ä–∞",
        status="–Ω–æ–≤—ã–π",
        estimated_cost=Decimal('100.00'),
        final_cost=Decimal('150.00'),
        expenses=Decimal('50.00')
    )
    print(f"–°–æ–∑–¥–∞–Ω –∑–∞–∫–∞–∑ –±–µ–∑ –º–∞—Å—Ç–µ—Ä–∞: #{order_without_master.id}")
    
    return order_with_master, order_without_master

def test_transfer_function_logic():
    """–¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–¥–∞—á–∏ –Ω–∞–ø—Ä—è–º—É—é"""
    print("\n=== –¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–¥–∞—á–∏ ===")
    
    super_admin, master, warranty_master = create_test_users()
    order_with_master, order_without_master = create_test_orders(master)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –¥–ª—è —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –¥–ª—è —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
    ROLES = {
        'SUPER_ADMIN': 'super-admin',
        'CURATOR': 'curator'
    }
    
    allowed_roles = [ROLES['SUPER_ADMIN'], 'admin', ROLES['CURATOR']]
    is_assigned_master = order_with_master.assigned_master and super_admin == order_with_master.assigned_master
    is_admin_role = super_admin.role in allowed_roles
    
    print(f"   –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {super_admin.role}")
    print(f"   –†–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ —Ä–æ–ª–∏: {allowed_roles}")
    print(f"   –Ø–≤–ª—è–µ—Ç—Å—è –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–º –º–∞—Å—Ç–µ—Ä–æ–º: {is_assigned_master}")
    print(f"   –ò–º–µ–µ—Ç –∞–¥–º–∏–Ω—Å–∫–∏–µ –ø—Ä–∞–≤–∞: {is_admin_role}")
    print(f"   –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω: {is_assigned_master or is_admin_role}")
    
    assert is_admin_role, "–°—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø"
    print("   ‚úÖ –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –¥–ª—è –º–∞—Å—Ç–µ—Ä–∞
    print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞")
    is_assigned_master = order_with_master.assigned_master and master == order_with_master.assigned_master
    is_admin_role = master.role in allowed_roles
    
    print(f"   –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {master.role}")
    print(f"   –Ø–≤–ª—è–µ—Ç—Å—è –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–º –º–∞—Å—Ç–µ—Ä–æ–º: {is_assigned_master}")
    print(f"   –ò–º–µ–µ—Ç –∞–¥–º–∏–Ω—Å–∫–∏–µ –ø—Ä–∞–≤–∞: {is_admin_role}")
    print(f"   –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω: {is_assigned_master or is_admin_role}")
    
    assert is_assigned_master, "–ù–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –º–∞—Å—Ç–µ—Ä –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø"
    print("   ‚úÖ –ù–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –º–∞—Å—Ç–µ—Ä –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ —à—Ç—Ä–∞—Ñ–æ–≤
    print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ —à—Ç—Ä–∞—Ñ–æ–≤")
    
    # –î–ª—è –∑–∞–∫–∞–∑–∞ —Å –º–∞—Å—Ç–µ—Ä–æ–º
    fine_amount = Decimal('50.00')
    old_assigned_master = order_with_master.assigned_master
    fine_applied = Decimal('0.00')
    
    if old_assigned_master and fine_amount > 0:
        fine_applied = fine_amount
    
    print(f"   –ó–∞–∫–∞–∑ —Å –º–∞—Å—Ç–µ—Ä–æ–º:")
    print(f"     –ù–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –º–∞—Å—Ç–µ—Ä: {old_assigned_master}")
    print(f"     –†–∞–∑–º–µ—Ä —à—Ç—Ä–∞—Ñ–∞: {fine_amount}")
    print(f"     –®—Ç—Ä–∞—Ñ –ø—Ä–∏–º–µ–Ω—ë–Ω: {fine_applied}")
    assert fine_applied == fine_amount, "–®—Ç—Ä–∞—Ñ –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–º–µ–Ω—è—Ç—å—Å—è –¥–ª—è –∑–∞–∫–∞–∑–∞ —Å –º–∞—Å—Ç–µ—Ä–æ–º"
    
    # –î–ª—è –∑–∞–∫–∞–∑–∞ –±–µ–∑ –º–∞—Å—Ç–µ—Ä–∞
    old_assigned_master = order_without_master.assigned_master
    fine_applied = Decimal('0.00')
    
    if old_assigned_master and fine_amount > 0:
        fine_applied = fine_amount
        
    print(f"   –ó–∞–∫–∞–∑ –±–µ–∑ –º–∞—Å—Ç–µ—Ä–∞:")
    print(f"     –ù–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –º–∞—Å—Ç–µ—Ä: {old_assigned_master}")
    print(f"     –†–∞–∑–º–µ—Ä —à—Ç—Ä–∞—Ñ–∞: {fine_amount}")
    print(f"     –®—Ç—Ä–∞—Ñ –ø—Ä–∏–º–µ–Ω—ë–Ω: {fine_applied}")
    assert fine_applied == Decimal('0.00'), "–®—Ç—Ä–∞—Ñ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–º–µ–Ω—è—Ç—å—Å—è –¥–ª—è –∑–∞–∫–∞–∑–∞ –±–µ–∑ –º–∞—Å—Ç–µ—Ä–∞"
    
    print("   ‚úÖ –õ–æ–≥–∏–∫–∞ —à—Ç—Ä–∞—Ñ–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
    print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ä—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    old_status = order_with_master.status
    old_transferred_to = order_with_master.transferred_to
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–µ—Ä–µ–¥–∞—á—É
    order_with_master.transferred_to = warranty_master
    order_with_master.status = '–ø–µ—Ä–µ–¥–∞–Ω –Ω–∞ –≥–∞—Ä–∞–Ω—Ç–∏—é'
    order_with_master.save()
    
    print(f"   –°—Ç–∞—Ä—ã–π —Å—Ç–∞—Ç—É—Å: {old_status}")
    print(f"   –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: {order_with_master.status}")
    print(f"   –ü–µ—Ä–µ–¥–∞–Ω: {order_with_master.transferred_to.email}")
    
    assert order_with_master.status == '–ø–µ—Ä–µ–¥–∞–Ω –Ω–∞ –≥–∞—Ä–∞–Ω—Ç–∏—é'
    assert order_with_master.transferred_to == warranty_master
    print("   ‚úÖ –ó–∞–∫–∞–∑ –æ–±–Ω–æ–≤–ª—ë–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")

def clean_test_data():
    """–û—á–∏—â–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"""
    print("\n–û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    OrderLog.objects.filter(description__contains='–¢–µ—Å—Ç–æ–≤—ã–π').delete()
    TransactionLog.objects.filter(description__contains='–¢–µ—Å—Ç–æ–≤—ã–π').delete()
    BalanceLog.objects.filter(user__email__contains='test@test.com').delete()
    Order.objects.filter(description__contains='–¢–µ—Å—Ç–æ–≤—ã–π').delete()
    Balance.objects.filter(user__email__contains='test@test.com').delete()
    Token.objects.filter(user__email__contains='test@test.com').delete()
    CustomUser.objects.filter(email__contains='test@test.com').delete()
    print("   –î–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ª–æ–≥–∏–∫–∏ –ø–µ—Ä–µ–¥–∞—á–∏ –∑–∞–∫–∞–∑–æ–≤ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–º –º–∞—Å—Ç–µ—Ä–∞–º")
    
    try:
        # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        clean_test_data()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
        test_transfer_function_logic()
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("\nüìã –ö—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π:")
        print("‚úÖ –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –ª—é–±—ã–µ –∑–∞–∫–∞–∑—ã")
        print("‚úÖ –ö—É—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –ª—é–±—ã–µ –∑–∞–∫–∞–∑—ã") 
        print("‚úÖ –ù–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –º–∞—Å—Ç–µ—Ä–∞ –º–æ–≥—É—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Å–≤–æ–∏ –∑–∞–∫–∞–∑—ã")
        print("‚úÖ –®—Ç—Ä–∞—Ñ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –º–∞—Å—Ç–µ—Ä")
        print("‚úÖ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –¥–ª—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π")
        
    except Exception as e:
        print(f"‚ùå –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π: {e}")
        import traceback
        traceback.print_exc()
    finally:
        # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        clean_test_data()

if __name__ == '__main__':
    main()
