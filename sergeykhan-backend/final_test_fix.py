#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–æ–π
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Ä—É—á–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ –º–∞—Å—Ç–µ—Ä—Å–∫–æ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
"""

import requests
import json
import sys


def test_manual_distance_display():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä—É—á–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏ –≤ –º–∞—Å—Ç–µ—Ä—Å–∫–æ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ"""
    
    print("=" * 60)
    print("–§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –î–ò–°–¢–ê–ù–¶–ò–û–ù–ö–ò")
    print("=" * 60)
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_user_email = 'maksimka1@gmail.com'
    test_user_password = 'masterpassword'
    base_url = 'http://127.0.0.1:8000'
    
    try:
        # 1. –õ–æ–≥–∏–Ω –∫–∞–∫ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        print(f"\n1. –õ–æ–≥–∏–Ω –∫–∞–∫ {test_user_email}...")
        login_data = {
            'email': test_user_email,
            'password': test_user_password
        }
        
        login_response = requests.post(f'{base_url}/login/', json=login_data)
        if login_response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏–Ω–∞: {login_response.text}")
            return False
            
        token = login_response.json()['token']
        headers = {'Authorization': f'Token {token}'}
        print(f"‚úÖ –õ–æ–≥–∏–Ω —É—Å–ø–µ—à–Ω—ã–π, —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω")
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç get_master_distance_with_orders
        print(f"\n2. –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç get_master_distance_with_orders...")
        
        distance_response = requests.get(f'{base_url}/api/distance/master/orders/', headers=headers)
        if distance_response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞: {distance_response.text}")
            return False
            
        distance_data = distance_response.json()
        distance_info = distance_data['distance_info']
        
        print(f"   –£—Ä–æ–≤–µ–Ω—å –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏: {distance_info['distance_level']}")
        print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {distance_info['distance_level_name']}")
        print(f"   –ß–∞—Å—ã –≤–∏–¥–∏–º–æ—Å—Ç–∏: {distance_info['visibility_hours']}")
        print(f"   –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: {distance_data['total_orders']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∂–∏–¥–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        expected_level = 1
        expected_name = "–û–±—ã—á–Ω–∞—è (+4—á)"
        expected_hours = 28
        
        if distance_info['distance_level'] != expected_level:
            print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏: –æ–∂–∏–¥–∞–ª—Å—è {expected_level}, –ø–æ–ª—É—á–µ–Ω {distance_info['distance_level']}")
            return False
            
        if distance_info['distance_level_name'] != expected_name:
            print(f"‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏: –æ–∂–∏–¥–∞–ª–æ—Å—å '{expected_name}', –ø–æ–ª—É—á–µ–Ω–æ '{distance_info['distance_level_name']}'")
            return False
            
        if distance_info['visibility_hours'] != expected_hours:
            print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ —á–∞—Å—ã –≤–∏–¥–∏–º–æ—Å—Ç–∏: –æ–∂–∏–¥–∞–ª–∏—Å—å {expected_hours}, –ø–æ–ª—É—á–µ–Ω—ã {distance_info['visibility_hours']}")
            return False
            
        print("‚úÖ –≠–Ω–¥–ø–æ–∏–Ω—Ç get_master_distance_with_orders —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç get_master_available_orders_with_distance
        print(f"\n3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç get_master_available_orders_with_distance...")
        
        available_response = requests.get(f'{base_url}/api/distance/orders/available/', headers=headers)
        if available_response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞: {available_response.text}")
            return False
            
        available_data = available_response.json()
        available_distance_info = available_data['distance_info']
        
        print(f"   –£—Ä–æ–≤–µ–Ω—å –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏: {available_distance_info['distance_level']}")
        print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {available_distance_info['distance_level_name']}")
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤: {available_distance_info['orders_count']}")
        
        if available_distance_info['distance_level'] != expected_level:
            print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏: –æ–∂–∏–¥–∞–ª—Å—è {expected_level}, –ø–æ–ª—É—á–µ–Ω {available_distance_info['distance_level']}")
            return False
            
        print("‚úÖ –≠–Ω–¥–ø–æ–∏–Ω—Ç get_master_available_orders_with_distance —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
        print(f"\n4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º...")
        
        meets_requirements = distance_info['meets_requirements']
        statistics = distance_info['statistics']
        thresholds = distance_info['thresholds']
        
        print(f"   –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"     - –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {statistics['average_check']}")
        print(f"     - –î–Ω–µ–≤–Ω–∞—è –≤—ã—Ä—É—á–∫–∞: {statistics['daily_revenue']}")
        print(f"     - –û–±–æ—Ä–æ—Ç –∑–∞ 10 –¥–Ω–µ–π: {statistics['net_turnover_10_days']}")
        
        print(f"   –ü–æ—Ä–æ–≥–∏:")
        print(f"     - –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {thresholds['average_check_threshold']}")
        print(f"     - –î–Ω–µ–≤–Ω–∞—è –≤—ã—Ä—É—á–∫–∞: {thresholds['daily_revenue_threshold']}")
        print(f"     - –û–±–æ—Ä–æ—Ç –∑–∞ 10 –¥–Ω–µ–π: {thresholds['net_turnover_threshold']}")
        
        print(f"   –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º:")
        print(f"     - –£—Ä–æ–≤–µ–Ω—å 1: {meets_requirements['level_1']}")
        print(f"     - –£—Ä–æ–≤–µ–Ω—å 2: {meets_requirements['level_2']}")
        
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –¥–∏—Å—Ç–∞–Ω—Ü–∏—é 1 –≤—Ä—É—á–Ω—É—é, –Ω–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
        # –≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ, –Ω–æ —É—Ä–æ–≤–µ–Ω—å –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é
        print("‚úÖ –õ–æ–≥–∏–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        
        print(f"\n" + "=" * 60)
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ:")
        print("   - –†—É—á–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –¥–∏—Å—Ç–∞–Ω—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        print("   - –ú–∞—Å—Ç–µ—Ä—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é")
        print("   - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –ø–æ—Ä–æ–≥–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ä—É—á–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫")
        print("=" * 60)
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False


if __name__ == "__main__":
    success = test_manual_distance_display()
    sys.exit(0 if success else 1)
