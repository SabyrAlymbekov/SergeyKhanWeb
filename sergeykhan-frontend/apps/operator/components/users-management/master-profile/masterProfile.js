"use client";
import React, { useEffect, useState } from "react";
import axios from "axios";
import { API } from "@shared/constants/constants";
import { HistoryPayments } from "@shared/finances/chartFinances/historyPayments";
import { OrdersDataTable } from "@shared/orders/(beta-orders)/OrdersTable";
import { columns } from "@shared/constants/orders";
import OperatorBalanceView from "@/components/balance-view/OperatorBalanceView";
import { MasterCalendar } from "@workspace/ui/components/master-calendar";
/**
 * –ü—Ä–æ—Ñ–∏–ª—å –º–∞—Å—Ç–µ—Ä–∞ c –±–∞–ª–∞–Ω—Å–æ–º, –≥—Ä–∞—Ñ–∏–∫–æ–º, –ª–æ–≥–æ–º –ø–ª–∞—Ç–µ–∂–µ–π –∏ —Å–ø–∏—Å–∫–æ–º –∑–∞–∫–∞–∑–æ–≤.
 */
const MasterProfile = ({ id }) => {
    // ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ state ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    const [master, setMaster] = useState(null);
    const [orders, setOrders] = useState([]);
    const [loadingProfile, setLoadingProfile] = useState(true);
    const [loadingOrders, setLoadingOrders] = useState(true);
    const [error, setError] = useState(null);
    const token = typeof window !== "undefined" ? localStorage.getItem("token") : "";
    // ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ helpers ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    const fetchProfile = async () => {
        setLoadingProfile(true);
        setError(null);
        try {
            const res = await axios.get(`${API}/users/${id}/`, {
                headers: { Authorization: `Token ${token}` },
            });
            setMaster(res.data);
        }
        catch (err) {
            console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è –º–∞—Å—Ç–µ—Ä–∞", err);
            setError("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –º–∞—Å—Ç–µ—Ä–∞");
        }
        finally {
            setLoadingProfile(false);
        }
    };
    const fetchOrders = async () => {
        setLoadingOrders(true);
        try {
            const res = await axios.get(`${API}/orders/master/${id}/`, { headers: { Authorization: `Token ${token}` } });
            setOrders(res.data);
        }
        catch (err) {
            console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤ –º–∞—Å—Ç–µ—Ä–∞", err);
        }
        finally {
            setLoadingOrders(false);
        }
    };
    useEffect(() => {
        fetchProfile();
        fetchOrders();
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [id]);
    // ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ render ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    if (loadingProfile) {
        return <div>–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è...</div>;
    }
    if (error) {
        return <div className="text-red-500">{error}</div>;
    }
    if (!master) {
        return <div>–ú–∞—Å—Ç–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω</div>;
    }
    return (<div className="container p-4">
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∏–º–µ–Ω–µ–º –º–∞—Å—Ç–µ—Ä–∞ */}
            <div className="mb-6">
                <h1 className="text-3xl font-bold">
                    {master.first_name} {master.last_name}
                </h1>
                <p className="text-gray-600">{master.email}</p>
                <p className="text-sm text-gray-500">ID: {master.id}</p>
            </div>

            {/* –ë–∞–ª–∞–Ω—Å –∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ */}
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                {/* –ë–∞–ª–∞–Ω—Å - —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å–º–æ—Ç—Ä –¥–ª—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ */}
                <div className="rounded-xl border px-5 py-7">
                    <OperatorBalanceView userId={id}/>
                </div>

                {/* –ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π */}
                <div className="rounded-xl border px-5 py-7 h-full">
                    <HistoryPayments userId={id}/>
                </div>
            </div>

            {/* –ö–∞–ª–µ–Ω–¥–∞—Ä—å –º–∞—Å—Ç–µ—Ä–∞ */}
            <div className="pt-5">
                <div className="rounded-xl border p-6">
                    <h3 className="text-lg font-semibold mb-4">üìÖ –ì—Ä–∞—Ñ–∏–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞</h3>
                    <MasterCalendar masterId={parseInt(id)} userRole="operator" readOnly={true} showCreateButton={false}/>
                </div>
            </div>

            {/* –£—Ä–æ–≤–µ–Ω—å –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–∏ –º–∞—Å—Ç–µ—Ä–∞ */}
            <div className="pt-5">
                <div className="rounded-xl border p-6">
                    {/* <MasterDistanceTable masterId={parseInt(id)} /> */}
                    <div className="text-yellow-600">‚ö†Ô∏è –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω</div>
                </div>
            </div>

            {/* –¢–∞–±–ª–∏—Ü–∞ –∑–∞–∫–∞–∑–æ–≤ –º–∞—Å—Ç–µ—Ä–∞ */}
            <div className="pt-5">
                {loadingOrders ? (<div>–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–∞–∑–æ–≤...</div>) : (<OrdersDataTable masterId={id} data={orders} columns={columns} status="operator"/>)}
            </div>
        </div>);
};
export default MasterProfile;
