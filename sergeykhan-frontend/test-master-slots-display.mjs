#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤ –º–∞—Å—Ç–µ—Ä–æ–≤
 * –≤ –ø–∞–Ω–µ–ª–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤
 */

const baseUrl = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000';

async function testMasterSlotsDisplay() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ª–æ—Ç–æ–≤ –º–∞—Å—Ç–µ—Ä–æ–≤...');
  console.log('üìç API URL:', baseUrl);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–∫–µ–Ω –µ—Å—Ç—å –≤ localStorage (—Å–∏–º—É–ª—è—Ü–∏—è)
  console.log('\nüîê 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –º–∞—Å—Ç–µ—Ä–æ–≤
  console.log('\nüë• 2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞—Å—Ç–µ—Ä–æ–≤...');
  try {
    const response = await fetch(`${baseUrl}/users/masters/`, {
      headers: {
        'Authorization': `Token test_token`,
        'Content-Type': 'application/json'
      }
    });
    
    console.log('–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);
    if (response.ok) {
      const masters = await response.json();
      console.log('‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Å—Ç–µ—Ä–æ–≤:', masters.length);
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –æ —Å–ª–æ—Ç–∞—Ö –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞
      if (masters.length > 0) {
        const firstMaster = masters[0];
        console.log(`\nüìä 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ª–æ—Ç–æ–≤ –¥–ª—è –º–∞—Å—Ç–µ—Ä–∞ ${firstMaster.id}...`);
        
        try {
          const workloadResponse = await fetch(
            `${baseUrl}/api/masters/${firstMaster.id}/workload/`,
            {
              headers: {
                'Authorization': `Token test_token`,
                'Content-Type': 'application/json'
              }
            }
          );
          
          console.log('–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ workload:', workloadResponse.status);
          if (workloadResponse.ok) {
            const workloadData = await workloadResponse.json();
            console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ –ø–æ–ª—É—á–µ–Ω—ã:', {
              master_id: workloadData.master_id,
              availability_slots_count: workloadData.availability_slots?.length || 0,
              availability_slots: workloadData.availability_slots,
              total_orders_today: workloadData.total_orders_today
            });
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–ª–æ—Ç–æ–≤
            if (workloadData.availability_slots && workloadData.availability_slots.length > 0) {
              console.log('\nüïí 4. –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–ª–æ—Ç–æ–≤:');
              workloadData.availability_slots.slice(0, 3).forEach((slot, index) => {
                console.log(`   –°–ª–æ—Ç ${index + 1}:`, {
                  date: slot.date,
                  start_time: slot.start_time,
                  end_time: slot.end_time,
                  formatted_date: new Date(slot.date).toLocaleDateString('ru-RU', {
                    day: '2-digit',
                    month: '2-digit',
                    year: '2-digit'
                  })
                });
              });
              
              console.log('\n‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù: –°–ª–æ—Ç—ã –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
            } else {
              console.log('\n‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –£ –º–∞—Å—Ç–µ—Ä–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤');
            }
          } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ —Å–ª–æ—Ç–∞—Ö:', workloadResponse.status);
          }
        } catch (error) {
          console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Å–ª–æ—Ç–æ–≤:', error.message);
        }
      } else {
        console.log('‚ö†Ô∏è –ú–∞—Å—Ç–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      }
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞—Å—Ç–µ—Ä–æ–≤:', response.status);
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –º–∞—Å—Ç–µ—Ä–æ–≤:', error.message);
  }
}

async function testSlotDisplayLogic() {
  console.log('\nüé® 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ª–æ—Ç–æ–≤...');
  
  // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const mockWorkloadData = {
    master_id: 1,
    master_email: 'test@example.com',
    availability_slots: [
      { id: 1, date: '2025-06-16', start_time: '09:00', end_time: '10:00' },
      { id: 2, date: '2025-06-16', start_time: '10:00', end_time: '11:00' },
      { id: 3, date: '2025-06-17', start_time: '14:00', end_time: '15:00' },
      { id: 4, date: '2025-06-18', start_time: '16:00', end_time: '17:00' },
      { id: 5, date: '2025-06-19', start_time: '09:00', end_time: '10:00' }
    ],
    total_orders_today: 2,
    orders_count_by_date: {
      '2025-06-16': 2,
      '2025-06-17': 1
    }
  };
  
  console.log('–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:', mockWorkloadData);
  
  // –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–µ—Ä–≤—ã—Ö 3 —Å–ª–æ—Ç–æ–≤
  console.log('\n–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–µ—Ä–≤—ã—Ö 3 —Å–ª–æ—Ç–æ–≤:');
  mockWorkloadData.availability_slots.slice(0, 3).forEach((slot, index) => {
    const formattedDate = new Date(slot.date).toLocaleDateString('ru-RU', {
      day: '2-digit',
      month: '2-digit'
    });
    console.log(`   ${formattedDate} ${slot.start_time}-${slot.end_time}`);
  });
  
  if (mockWorkloadData.availability_slots.length > 3) {
    console.log(`   +${mockWorkloadData.availability_slots.length - 3} –µ—â–µ...`);
  }
  
  console.log('\n‚úÖ –õ–æ–≥–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
async function runTests() {
  try {
    await testMasterSlotsDisplay();
    await testSlotDisplayLogic();
    console.log('\nüéâ –í–°–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤:', error);
  }
}

if (import.meta.url === `file://${process.argv[1]}`) {
  runTests();
}

export { testMasterSlotsDisplay, testSlotDisplayLogic };
