#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã OrderAssignmentPanel
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –º–∞—Å—Ç–µ—Ä–æ–≤
 */

import { execSync } from 'child_process';
import { readFileSync } from 'fs';
import path from 'path';

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OrderAssignmentPanel...\n');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
console.log('1. üìÇ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤...');
try {
  const panelPath = 'packages/ui/src/components/shared/orders/order-assignment/OrderAssignmentPanel.tsx';
  const orderDetailsPath = 'packages/ui/src/components/shared/orders/unified-order-details/UnifiedOrderDetails.tsx';
  
  const panelContent = readFileSync(panelPath, 'utf-8');
  const orderDetailsContent = readFileSync(orderDetailsPath, 'utf-8');
  
  console.log('   ‚úÖ OrderAssignmentPanel.tsx –Ω–∞–π–¥–µ–Ω');
  console.log('   ‚úÖ UnifiedOrderDetails.tsx –Ω–∞–π–¥–µ–Ω');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞
  if (orderDetailsContent.includes('import OrderAssignmentPanel from "../order-assignment/OrderAssignmentPanel"')) {
    console.log('   ‚úÖ OrderAssignmentPanel –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω');
  } else {
    console.log('   ‚ùå OrderAssignmentPanel –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ');
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
  if (orderDetailsContent.includes('<OrderAssignmentPanel')) {
    console.log('   ‚úÖ OrderAssignmentPanel –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ JSX');
  } else {
    console.log('   ‚ùå OrderAssignmentPanel –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ JSX');
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –≤ OrderAssignmentPanel
  const requiredFunctions = [
    'fetchMastersData',
    'getAvailabilityStatus', 
    'handleAssign',
    'filteredMasters'
  ];
  
  console.log('\n2. üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞...');
  requiredFunctions.forEach(func => {
    if (panelContent.includes(func)) {
      console.log(`   ‚úÖ ${func} –Ω–∞–π–¥–µ–Ω–∞`);
    } else {
      console.log(`   ‚ùå ${func} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
    }
  });
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π
  const requiredStates = [
    'masters',
    'mastersWorkload', 
    'selectedMasterId',
    'searchTerm',
    'isLoading',
    'error'
  ];
  
  console.log('\n3. üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞...');
  requiredStates.forEach(state => {
    if (panelContent.includes(`const [${state},`) || panelContent.includes(`${state},`)) {
      console.log(`   ‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ ${state} –Ω–∞–π–¥–µ–Ω–æ`);
    } else {
      console.log(`   ‚ùå –°–æ—Å—Ç–æ—è–Ω–∏–µ ${state} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ`);
    }
  });
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints
  console.log('\n4. üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints...');
  const apiEndpoints = [
    '/users/masters/',
    '/api/masters/{id}/workload/'
  ];
  
  apiEndpoints.forEach(endpoint => {
    if (panelContent.includes(endpoint.replace('{id}', '${master.id}')) || 
        panelContent.includes(endpoint)) {
      console.log(`   ‚úÖ Endpoint ${endpoint} –Ω–∞–π–¥–µ–Ω`);
    } else {
      console.log(`   ‚ùå Endpoint ${endpoint} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
  });
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ TypeScript
  console.log('\n5. ‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript –∫–æ–º–ø–∏–ª—è—Ü–∏–∏...');
  try {
    execSync('npx tsc --noEmit --skipLibCheck packages/ui/src/components/shared/orders/order-assignment/OrderAssignmentPanel.tsx', 
      { stdio: 'pipe' });
    console.log('   ‚úÖ TypeScript –∫–æ–º–ø–∏–ª—è—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ');
  } catch (error) {
    console.log('   ‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ TypeScript (–º–æ–≥—É—Ç –±—ã—Ç—å —Å–≤—è–∑–∞–Ω—ã —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏)');
  }
  
  console.log('\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏:');
  console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
  console.log('2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É Console');
  console.log('3. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–Ω–∞—á–∏—Ç—å –º–∞—Å—Ç–µ—Ä–∞" –≤ –∑–∞–∫–∞–∑–µ');
  console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ - –¥–æ–ª–∂–Ω—ã –ø–æ—è–≤–∏—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å üîç üîë üìä');
  console.log('5. –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞" –≤ –ø–∞–Ω–µ–ª–∏');
  
  console.log('\nüéØ –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:');
  console.log('- –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
  console.log('- –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∞ curator –∏–ª–∏ super-admin)');
  console.log('- –ù–µ—Ç –º–∞—Å—Ç–µ—Ä–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
  console.log('- –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é –∏–ª–∏ API —Å–µ—Ä–≤–µ—Ä–æ–º');
  console.log('- –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π API URL');
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ñ–∞–π–ª–æ–≤:', error.message);
}

console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
