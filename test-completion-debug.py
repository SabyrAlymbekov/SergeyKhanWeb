#!/usr/bin/env python3

import requests
import json
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BASE_URL = "http://127.0.0.1:8000"
EMAIL = "test_master@completion.com"  # —Ç–µ—Å—Ç–æ–≤—ã–π –º–∞—Å—Ç–µ—Ä
PASSWORD = "test123"                  # –ø–∞—Ä–æ–ª—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞
ORDER_ID = 19                         # ID —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞

def login():
    """–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞"""
    login_data = {
        "email": EMAIL,     # –∏—Å–ø–æ–ª—å–∑—É–µ–º email –≤–º–µ—Å—Ç–æ username
        "password": PASSWORD
    }
    
    response = requests.post(f"{BASE_URL}/login/", json=login_data)
    if response.status_code == 200:
        token = response.json().get("token")
        print(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, —Ç–æ–∫–µ–Ω: {token[:20]}...")
        return token
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code}")
        print(response.text)
        return None

def test_completion(token):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞"""
    headers = {
        "Authorization": f"Token {token}"
    }
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ - —Ç–æ—á–Ω–æ —Ç–∞–∫–∏–µ –∂–µ –ø–æ–ª—è, –∫–∞–∫ –≤ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ
    completion_data = {
        "order": str(ORDER_ID),
        "work_description": "–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã",
        "parts_expenses": "100.50",
        "transport_costs": "50.00", 
        "total_received": "2000.00",
        "completion_date": datetime.now().isoformat()
    }
    
    print(f"\nüîÑ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ {ORDER_ID}:")
    print(json.dumps(completion_data, indent=2, ensure_ascii=False))
    
    # –ü—Ä–æ–±—É–µ–º —Å JSON –¥–∞–Ω–Ω—ã–º–∏
    response = requests.post(
        f"{BASE_URL}/api/orders/{ORDER_ID}/complete/",
        headers={**headers, "Content-Type": "application/json"},
        json=completion_data
    )
    
    print(f"\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç JSON –∑–∞–ø—Ä–æ—Å–∞:")
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    print(f"–û—Ç–≤–µ—Ç: {response.text}")
    
    if response.status_code != 201:
        print("\nüîÑ –ü—Ä–æ–±—É–µ–º —Å FormData...")
        
        # –ü—Ä–æ–±—É–µ–º —Å FormData
        form_data = {
            "order": str(ORDER_ID),
            "work_description": "–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã",
            "parts_expenses": "100.50",
            "transport_costs": "50.00",
            "total_received": "2000.00",
            "completion_date": datetime.now().isoformat()
        }
        
        response = requests.post(
            f"{BASE_URL}/api/orders/{ORDER_ID}/complete/",
            headers={"Authorization": f"Token {token}"},
            data=form_data
        )
        
        print(f"\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç FormData –∑–∞–ø—Ä–æ—Å–∞:")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"–û—Ç–≤–µ—Ç: {response.text}")

def check_order_status(token):
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞"""
    headers = {
        "Authorization": f"Token {token}"
    }
    
    response = requests.get(f"{BASE_URL}/api/orders/{ORDER_ID}/detail/", headers=headers)
    if response.status_code == 200:
        order_data = response.json()
        print(f"\nüìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ {ORDER_ID}:")
        print(f"–°—Ç–∞—Ç—É—Å: {order_data.get('status')}")
        print(f"–ù–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –º–∞—Å—Ç–µ—Ä: {order_data.get('assigned_master_name', '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω')}")
        print(f"–ï—Å—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ: {'–î–∞' if 'completion' in order_data else '–ù–µ—Ç'}")
        return order_data
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞: {response.status_code}")
        print(response.text)
        return None

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞...")
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    token = login()
    if not token:
        exit(1)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
    order_data = check_order_status(token)
    if not order_data:
        exit(1)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
    test_completion(token)
