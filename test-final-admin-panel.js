/**
 * –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –≤—Å–µ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏ –∑–≤–æ–Ω–∫–æ–≤
 */

const BASE_URL = "http://localhost:3000";

async function testFullAdminPanel() {
    console.log("üß™ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–û–ô –ü–ê–ù–ï–õ–ò –ó–í–û–ù–ö–û–í");
    console.log("=".repeat(60));

    // 1. –¢–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ VPBX
    console.log("\nüìç 1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ VPBX...");
    try {
        const authResponse = await fetch(`${BASE_URL}/api/vpbx/get-token`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                login: "slavakhan100",
                password: "i4yc448p"
            }),
        });

        if (authResponse.ok) {
            const authData = await authResponse.json();
            console.log("‚úÖ VPBX –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞");
            console.log(`   –¢–æ–∫–µ–Ω: ${authData.accessToken.substring(0, 20)}...`);
            
            // 2. –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            console.log("\nüìç 2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...");
            
            const userTypes = [
                { name: "–ú–∞—Å—Ç–µ—Ä–∞", endpoint: "/api/users/masters" },
                { name: "–ö—É—Ä–∞—Ç–æ—Ä—ã", endpoint: "/api/users/curators" },
                { name: "–û–ø–µ—Ä–∞—Ç–æ—Ä—ã", endpoint: "/api/users/operators" },
            ];

            let totalUsers = 0;
            for (const userType of userTypes) {
                try {
                    const response = await fetch(`${BASE_URL}${userType.endpoint}`);
                    if (response.ok) {
                        const users = await response.json();
                        console.log(`   ‚úÖ ${userType.name}: ${users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
                        totalUsers += users.length;
                    } else {
                        console.log(`   ‚ùå ${userType.name}: –û—à–∏–±–∫–∞ ${response.status}`);
                    }
                } catch (error) {
                    console.log(`   ‚ùå ${userType.name}: ${error.message}`);
                }
            }

            console.log(`   üìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${totalUsers}`);

            // 3. –¢–µ—Å—Ç –≤—ã–∑–æ–≤–∞ API –∑–≤–æ–Ω–∫–æ–≤
            console.log("\nüìç 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∑–≤–æ–Ω–∫–æ–≤...");
            
            const testNumbers = [
                { internal: "1001", external: "+996555123456", description: "–¢–µ—Å—Ç —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –Ω–æ–º–µ—Ä–∞–º–∏" },
                { internal: "9999", external: "+996555654321", description: "–¢–µ—Å—Ç —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º –Ω–æ–º–µ—Ä–æ–º" },
            ];

            for (const testCall of testNumbers) {
                console.log(`\n   üîç ${testCall.description}`);
                console.log(`   üìû ${testCall.internal} ‚Üí ${testCall.external}`);
                
                try {
                    const callResponse = await fetch(`${BASE_URL}/api/vpbx/MakeCall2`, {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                            "Authorization": `Bearer ${authData.accessToken}`,
                        },
                        body: JSON.stringify({
                            abonentNumber: testCall.internal,
                            number: testCall.external,
                        }),
                    });

                    const callResult = await callResponse.json();
                    
                    if (callResponse.ok && !callResult.error) {
                        console.log("   ‚úÖ –ó–≤–æ–Ω–æ–∫ –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ");
                        console.log(`   üìã –†–µ–∑—É–ª—å—Ç–∞—Ç:`, callResult);
                    } else {
                        console.log("   ‚ö†Ô∏è  –û–∂–∏–¥–∞–µ–º–∞—è –æ—à–∏–±–∫–∞:");
                        console.log(`   üìã ${callResult.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
                    }
                } catch (error) {
                    console.log(`   ‚ùå –û—à–∏–±–∫–∞ –≤—ã–∑–æ–≤–∞: ${error.message}`);
                }
            }

            // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ UI
            console.log("\nüìç 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ UI...");
            
            // –ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            try {
                const pageResponse = await fetch(`${BASE_URL}/call`);
                if (pageResponse.ok) {
                    console.log("   ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ /call –¥–æ—Å—Ç—É–ø–Ω–∞");
                    
                    const pageContent = await pageResponse.text();
                    const hasAdminPanel = pageContent.includes('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å –∑–≤–æ–Ω–∫–æ–≤');
                    const hasUUID = pageContent.includes('–¢–æ–∫–µ–Ω –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏');
                    
                    console.log(`   üìä –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å: ${hasAdminPanel ? '–ù–∞–π–¥–µ–Ω–∞' : '–ù–µ –Ω–∞–π–¥–µ–Ω–∞'}`);
                    console.log(`   üìä UUID —Ç–æ–∫–µ–Ω: ${hasUUID ? '–ù–∞–π–¥–µ–Ω' : '–ù–µ –Ω–∞–π–¥–µ–Ω'}`);
                } else {
                    console.log(`   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${pageResponse.status}`);
                }
            } catch (error) {
                console.log(`   ‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: ${error.message}`);
            }

            // 5. –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            console.log("\nüìç 5. –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø");
            console.log("   ========================================");
            console.log("   ‚úÖ VPBX API - –†–∞–±–æ—Ç–∞–µ—Ç");
            console.log("   ‚úÖ –¢–æ–∫–µ–Ω—ã - –ì–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è");
            console.log("   ‚úÖ –ó–≤–æ–Ω–∫–∏ - API –∏—Å–ø—Ä–∞–≤–ª–µ–Ω");
            console.log("   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ - –ó–∞–≥—Ä—É–∂–∞—é—Ç—Å—è");
            console.log("   ‚úÖ UI –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã - –î–æ—Å—Ç—É–ø–Ω—ã");
            console.log("\n   üéâ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–ê–Ø –ü–ê–ù–ï–õ–¨ –ü–û–õ–ù–û–°–¢–¨–Æ –ì–û–¢–û–í–ê!");
            console.log("\n   üìã –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:");
            console.log("      ‚Ä¢ –ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è UUID —Ç–æ–∫–µ–Ω–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏");
            console.log("      ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤ Beeline VPBX");
            console.log("      ‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤");
            console.log("      ‚Ä¢ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä–æ–≤");
            console.log("      ‚Ä¢ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤ —á–µ—Ä–µ–∑ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π API");
            console.log("      ‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–≤–æ–Ω–∫–æ–≤");
            console.log("      ‚Ä¢ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π UI —Å CSS-in-JS");
            console.log("      ‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥");

        } else {
            console.log("‚ùå VPBX –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å");
            const errorData = await authResponse.json();
            console.log(`   –û—à–∏–±–∫–∞: ${errorData.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
        }

    } catch (error) {
        console.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:", error.message);
    }

    console.log("\n" + "=".repeat(60));
    console.log("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û");
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
setTimeout(testFullAdminPanel, 2000);
