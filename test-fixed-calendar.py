#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è garant-master
–¢–µ—Å—Ç–∏—Ä—É–µ–º —á—Ç–æ frontend —Ç–µ–ø–µ—Ä—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ—Ç —Å backend
"""

import requests
import json

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BASE_URL = "http://127.0.0.1:8000"
EMAIL = "garant_master@example.com"
PASSWORD = "garant123"

def test_fixed_calendar():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –∫–∞–ª–µ–Ω–¥–∞—Ä—è –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è endpoint"""
    
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è garant-master")
    print("=" * 60)
    
    # 1. –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    print("1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...")
    auth_data = {
        "email": EMAIL,
        "password": PASSWORD
    }
    
    response = requests.post(f"{BASE_URL}/login/", json=auth_data)
    
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code}")
        return False
    
    token = response.json().get('token')
    print(f"‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {token[:20]}...")
    
    headers = {
        'Authorization': f'Token {token}',
        'Content-Type': 'application/json'
    }
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π endpoint /mine (–±–µ–∑ trailing slash)
    print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ endpoint /mine...")
    response = requests.get(f"{BASE_URL}/mine", headers=headers)
    
    if response.status_code == 200:
        events = response.json()
        print(f"‚úÖ GET /mine —Ä–∞–±–æ—Ç–∞–µ—Ç! –ù–∞–π–¥–µ–Ω–æ {len(events)} —Å–æ–±—ã—Ç–∏–π")
        for event in events:
            print(f"   - {event['title']} ({event['start']})")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ GET /mine: {response.status_code}")
        return False
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å—Ç–∞—Ä—ã–π endpoint /mine/ –±–æ–ª—å—à–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (–∫–∞–∫ –∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å)
    print("\n3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å—Ç–∞—Ä—ã–π endpoint /mine/ —Ç–µ–ø–µ—Ä—å –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è...")
    response = requests.get(f"{BASE_URL}/mine/", headers=headers)
    
    if response.status_code == 404:
        print("‚úÖ Endpoint /mine/ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 404 (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)")
    else:
        print(f"‚ö†Ô∏è  Endpoint /mine/ –≤—Å–µ –µ—â–µ –¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
    
    # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è —á–µ—Ä–µ–∑ POST /create/
    print("\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è...")
    test_event = {
        "title": "–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è",
        "start": "2024-12-25T10:00:00",
        "end": "2024-12-25T11:00:00",
        "allDay": False
    }
    
    response = requests.post(f"{BASE_URL}/create/", json=test_event, headers=headers)
    
    if response.status_code in [200, 201]:
        created_event = response.json()
        print(f"‚úÖ –°–æ–±—ã—Ç–∏–µ —Å–æ–∑–¥–∞–Ω–æ: {created_event.get('title')} (ID: {created_event.get('id')})")
        event_id = created_event.get('id')
        
        # 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
        print("\n5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è...")
        update_data = {
            "start": "2024-12-25T11:00:00",
            "end": "2024-12-25T12:00:00"
        }
        
        response = requests.put(f"{BASE_URL}/update/{event_id}/", json=update_data, headers=headers)
        
        if response.status_code == 200:
            print("‚úÖ –°–æ–±—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {response.status_code}")
        
        # 6. –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
        print("\n6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è...")
        response = requests.delete(f"{BASE_URL}/delete/{event_id}/", headers=headers)
        
        if response.status_code in [200, 204]:
            print("‚úÖ –°–æ–±—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {response.status_code}")
            
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è: {response.status_code}")
        return False
    
    # 7. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
    print("\n7. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è...")
    response = requests.get(f"{BASE_URL}/mine", headers=headers)
    
    if response.status_code == 200:
        events = response.json()
        print(f"‚úÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ! –ò—Ç–æ–≥–æ —Å–æ–±—ã—Ç–∏–π: {len(events)}")
        print("\nüìÖ –°–æ–±—ã—Ç–∏—è –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ:")
        for event in events:
            print(f"   - {event['title']} ({event['start']})")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏: {response.status_code}")
        return False
    
    print("\n" + "=" * 60)
    print("üéâ –ö–ê–õ–ï–ù–î–ê–†–¨ –ò–°–ü–†–ê–í–õ–ï–ù –ò –†–ê–ë–û–¢–ê–ï–¢ –ö–û–†–†–ï–ö–¢–ù–û!")
    print("‚úÖ Frontend —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π endpoint /mine")
    print("‚úÖ –í—Å–µ CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—Ç")
    print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ö–æ–¥–∏—Ç —É—Å–ø–µ—à–Ω–æ")
    
    return True

if __name__ == "__main__":
    test_fixed_calendar()
