#!/usr/bin/env python3

import requests
import json
import io
from datetime import datetime
from PIL import Image

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BASE_URL = "http://127.0.0.1:8000"
EMAIL = "test_photo_master@example.com"  # —Ç–µ—Å—Ç–æ–≤—ã–π –º–∞—Å—Ç–µ—Ä
PASSWORD = "test123"                     # –ø–∞—Ä–æ–ª—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞
ORDER_ID = 22                            # ID –∑–∞–∫–∞–∑–∞ –≤ —Å—Ç–∞—Ç—É—Å–µ "–Ω–∞–∑–Ω–∞—á–µ–Ω"

def create_test_image(name="test_image.jpg", size=(800, 600)):
    """–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –ø–∞–º—è—Ç–∏"""
    img = Image.new('RGB', size, color='red')
    img_buffer = io.BytesIO()
    img.save(img_buffer, format='JPEG')
    img_buffer.seek(0)
    return img_buffer

def login():
    """–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞"""
    login_data = {
        "email": EMAIL,
        "password": PASSWORD
    }
    
    response = requests.post(f"{BASE_URL}/login/", json=login_data)
    if response.status_code == 200:
        token = response.json().get("token")
        print(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, —Ç–æ–∫–µ–Ω: {token[:20]}...")
        return token
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code}")
        print(response.text)
        return None

def get_order_info(token, order_id):
    """–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ"""
    headers = {
        "Authorization": f"Token {token}"
    }
    
    response = requests.get(f"{BASE_URL}/api/orders/{order_id}/detail/", headers=headers)
    if response.status_code == 200:
        order_data = response.json()
        return {
            'status': order_data.get('status'),
            'assigned_master_name': order_data.get('assigned_master_name', '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω'),
            'completion': order_data.get('completion')
        }
    else:
        return {'status': '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω', 'assigned_master_name': '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω', 'completion': None}

def test_completion_with_photos(token):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏"""
    headers = {
        "Authorization": f"Token {token}"
    }
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    image1 = create_test_image("photo1.jpg", (800, 600))
    image2 = create_test_image("photo2.jpg", (1024, 768))
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
    form_data = {
        "order": str(ORDER_ID),
        "work_description": "–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏",
        "parts_expenses": "150.50",
        "transport_costs": "75.00", 
        "total_received": "2500.00",
        "completion_date": datetime.now().isoformat()
    }
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∞–π–ª—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    files = []
    files.append(('completion_photos', ('photo1.jpg', image1, 'image/jpeg')))
    files.append(('completion_photos', ('photo2.jpg', image2, 'image/jpeg')))
    
    print(f"\nüîÑ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ {ORDER_ID} —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏:")
    print(json.dumps(form_data, indent=2, ensure_ascii=False))
    print("üì∏ –ó–∞–≥—Ä—É–∂–∞–µ–º 2 —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏...")
    
    response = requests.post(
        f"{BASE_URL}/api/orders/{ORDER_ID}/complete/",
        headers=headers,
        data=form_data,
        files=files
    )
    
    print(f"\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏:")
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    print(f"–û—Ç–≤–µ—Ç: {response.text}")
    
    if response.status_code == 201:
        print("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ —É—Å–ø–µ—à–Ω–æ!")
        return True
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏")
        return False

def test_completion_without_photos(token):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"""
    headers = {
        "Authorization": f"Token {token}"
    }
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
    form_data = {
        "order": "23",  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥—Ä—É–≥–æ–π –∑–∞–∫–∞–∑
        "work_description": "–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π",
        "parts_expenses": "100.00",
        "transport_costs": "50.00", 
        "total_received": "2000.00",
        "completion_date": datetime.now().isoformat()
    }
    
    print(f"\nüîÑ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ 23 –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π:")
    print(json.dumps(form_data, indent=2, ensure_ascii=False))
    
    response = requests.post(
        f"{BASE_URL}/api/orders/23/complete/",
        headers=headers,
        data=form_data
    )
    
    print(f"\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π:")
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    print(f"–û—Ç–≤–µ—Ç: {response.text}")
    
    if response.status_code == 201:
        print("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —É—Å–ø–µ—à–Ω–æ!")
        return True
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞ –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π")
        return False

def check_order_status(token, order_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞"""
    headers = {
        "Authorization": f"Token {token}"
    }
    
    response = requests.get(f"{BASE_URL}/api/orders/{order_id}/detail/", headers=headers)
    if response.status_code == 200:
        order_data = response.json()
        print(f"\nüìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ {order_id}:")
        print(f"–°—Ç–∞—Ç—É—Å: {order_data.get('status')}")
        print(f"–ù–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –º–∞—Å—Ç–µ—Ä: {order_data.get('assigned_master_name', '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω')}")
        print(f"–ï—Å—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ: {'–î–∞' if 'completion' in order_data else '–ù–µ—Ç'}")
        if 'completion' in order_data:
            completion = order_data['completion']
            if completion and 'completion_photos' in completion:
                photos = completion['completion_photos']
                print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {len(photos)}")
                for i, photo in enumerate(photos, 1):
                    print(f"  –§–æ—Ç–æ {i}: {photo}")
        return order_data
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞: {response.status_code}")
        print(response.text)
        return None

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏...")
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    token = login()
    if not token:
        exit(1)
    
    print("\n" + "="*50)
    print("–¢–ï–°–¢ 1: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –° —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏")
    print("="*50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
    order_data = check_order_status(token, ORDER_ID)
    if order_data:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏
        success1 = test_completion_with_photos(token)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if success1:
            check_order_status(token, ORDER_ID)
    
    print("\n" + "="*50)
    print("–¢–ï–°–¢ 2: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –ë–ï–ó —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π")
    print("="*50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—Ç–æ—Ä–æ–≥–æ –∑–∞–∫–∞–∑–∞
    order_data2 = check_order_status(token, 23)
    if order_data2:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
        success2 = test_completion_without_photos(token)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if success2:
            check_order_status(token, 23)
    
    print("\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
