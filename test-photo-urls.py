#!/usr/bin/env python3

import requests
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BASE_URL = "http://127.0.0.1:8000"
CURATOR_EMAIL = "curator@gmail.com"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—É—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
CURATOR_PASSWORD = "12345"

def login_curator():
    """–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∫—É—Ä–∞—Ç–æ—Ä–∞"""
    login_data = {
        "email": CURATOR_EMAIL,
        "password": CURATOR_PASSWORD
    }
    
    response = requests.post(f"{BASE_URL}/login/", json=login_data)
    if response.status_code == 200:
        token = response.json().get("token")
        print(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∫—É—Ä–∞—Ç–æ—Ä–∞ —É—Å–ø–µ—à–Ω–∞")
        return token
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code}")
        print(response.text)
        return None

def test_completion_detail(token, completion_id):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞"""
    headers = {"Authorization": f"Token {token}"}
    
    response = requests.get(f"{BASE_URL}/api/order-completions/{completion_id}/", headers=headers)
    print(f"\nüìã –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ ID {completion_id}:")
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 200:
        completion_data = response.json()
        print("‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print(f"ID –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {completion_data.get('id')}")
        print(f"–û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã: {completion_data.get('work_description')}")
        
        photos = completion_data.get('completion_photos', [])
        print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {len(photos)}")
        
        for i, photo_url in enumerate(photos, 1):
            print(f"  –§–æ—Ç–æ {i}: {photo_url}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
            try:
                photo_response = requests.head(photo_url)
                status_emoji = "‚úÖ" if photo_response.status_code == 200 else "‚ùå"
                print(f"    {status_emoji} –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: HTTP {photo_response.status_code}")
            except Exception as e:
                print(f"    ‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞: {e}")
        
        return True
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö")
        print(f"–û—Ç–≤–µ—Ç: {response.text}")
        return False

def test_order_with_completion(token, order_id):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"""
    headers = {"Authorization": f"Token {token}"}
    
    response = requests.get(f"{BASE_URL}/api/orders/{order_id}/detail/", headers=headers)
    print(f"\nüìã –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ ID {order_id} —Å –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º:")
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 200:
        order_data = response.json()
        print("‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –ø–æ–ª—É—á–µ–Ω—ã!")
        
        completion = order_data.get('completion')
        if completion:
            print(f"–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ! ID: {completion.get('id')}")
            photos = completion.get('completion_photos', [])
            print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏: {len(photos)}")
            
            for i, photo_url in enumerate(photos, 1):
                print(f"  –§–æ—Ç–æ {i}: {photo_url}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
                try:
                    photo_response = requests.head(photo_url)
                    status_emoji = "‚úÖ" if photo_response.status_code == 200 else "‚ùå"
                    print(f"    {status_emoji} –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: HTTP {photo_response.status_code}")
                except Exception as e:
                    print(f"    ‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞: {e}")
        else:
            print("‚ùå –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞")
        
        return True
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞")
        print(f"–û—Ç–≤–µ—Ç: {response.text}")
        return False

def main():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞—Ö...")
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    token = login_curator()
    if not token:
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–π —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏
    print("\n" + "="*60)
    print("–¢–ï–°–¢ 1: –ü—Ä—è–º–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞")
    print("="*60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏
    completion_ids = [13, 15, 16]  # ID –∑–∞–≤–µ—Ä—à–µ–Ω–∏–π —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏
    for completion_id in completion_ids:
        test_completion_detail(token, completion_id)
    
    print("\n" + "="*60)
    print("–¢–ï–°–¢ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ —á–µ—Ä–µ–∑ detail endpoint")
    print("="*60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–∫–∞–∑—ã —Å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è–º–∏
    order_ids = [22, 24]  # ID –∑–∞–∫–∞–∑–æ–≤ —Å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è–º–∏
    for order_id in order_ids:
        test_order_with_completion(token, order_id)
    
    print("\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüí° –ï—Å–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Ç–µ–ø–µ—Ä—å –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –ø–æ–ª–Ω—ã–µ URL (–Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å http://),")
    print("   —Ç–æ –ø—Ä–æ–±–ª–µ–º–∞ —Ä–µ—à–µ–Ω–∞ –∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–æ–ª–∂–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è!")

if __name__ == "__main__":
    main()
